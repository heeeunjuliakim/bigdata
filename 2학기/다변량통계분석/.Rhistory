install.packages("MVA")
library(MVA)
demo("Ch-MVA")
library(mvtnorm)
library(mvtnorm)
install.packages("mvtnorm")
library(mvtnorm)
library(rgl)
install.packages("rgl")
hypo
dim(hypo)
cor(age, weight, data=hypo)
cor(x = age, y = weight, use = hypo)
measure
dim(measure)
cov(measure(,[1:3]))
cov(measure[,1:3])
cov(measure[measure$gender=="male",1:3])
cov(measure[meausre$gender=="Female",1:3])
cov(measure[meausre$gender=="female",1:3])
cov(measure[measure$gender=="female",1:3])
cor(measure[,1:3])
pairscor(measure[,1:3]))
pairs(cor(measure[,1:3]))
measure
pairs(cor(measure$gender=="male", measure$gender=="female"))
pairs(cor(measure[,1:3]))
cor(USairpollution),3)
USairpollution
round(cor(USairpollution),3)
cor.test(~SO2+temp, data=USairpollution)
summary(USairpollution)
USairpollution_S <- scale(USairpollution)
USairpollution_S
summary(USairpollution_S)
apply(USairpollution_S, 2, sd)
apply(USairpollution,2,sd)
apply(USairpollution_S, 2, sd) #각 변수의 표준편차를 2=열 기준으로 구하기
plot(USairpollution)
plot(USairpollution[,1],USairpollution[,2])
window(plot(USairpollution_S[,1],USairpollution_S[,2]))
plot(USairpollution_S[,1],USairpollution_S[,2])
plot(USairpollution[,1],USairpollution[,2])
plot(USairpollution_S[,1],USairpollution_S[,2])
round(cov(USairpollution_S),3)
head(USairpollution)
dist(USairpollution_S)
rouend(dist(USairpollution_S),3)
round(dist(USairpollution_S),3)
x2=x1=seq(-4,4,0.1)
x2
x1=matrix(x1,length(x1),length(x1))
x2=matrix(x2,length(x2),length(x2),byrow=T)
f=dmvnorm(cbind(as.vector(x1),as.vector(x2)))
f=matrix(f,dim(x1)[1],dim(x1)[1])
persp3d(x1,x2,f,col="lightblue",xlab="x1",ylab="x2")
library(mvtnorm)
library(rgl)
x2=x1=seq(-4,4,0.1)
x1=matrix(x1,length(x1),length(x1))
x2=matrix(x2,length(x2),length(x2),byrow=T)
f=dmvnorm(cbind(as.vector(x1),as.vector(x2)))
f=matrix(f,dim(x1)[1],dim(x1)[1])
persp3d(x1,x2,f,col="lightblue",xlab="x1",ylab="x2")
?dmvnorm
f=dmvnorm(cbind(as.vector(x1),as.vector(x2)),c(0,0),matrix(c(1,0.5,0.5,1),2,2))
f=matrix(f,dim(x1)[1],dim(x1)[1])
persp3d(x1,x2,f,col="lightblue",xlab="x1",ylab="x2")
X=rmvnorm(500,c(0,0),matrix(c(1,0.5,0.5,1),2,2))
plot(X[,1],X[,2],xlim=c(-4,4),ylim=c(-4,4),xlab="x1",ylab="x2")
x=seq(-4,4,0.01)
q=seq(0.1,0.9,0.1)
plot(x,dnorm(x),type='l',lwd=1.5,ylab="f(x)",xaxt="n")
for (i in 1:length(q)){
lines(c(1,1)*qnorm(q[i]),c(-0.1,dnorm(qnorm(q[i]))))
}
axis(1,at=qnorm(q),labels=parse(text=paste("q[",q,"]",sep="")),cex.axis=0.8)
plot(murder~burglary, Crime) #산점도
Crime <- read.csv("Crime.csv")
plot(murder~burglary, Crime) #산점도
identify(Crime$murder, Crime$burglary, labels=Crime$state)
out <- match(c("United States","Alaska","District of Columbia"), crime$state)
out <- match(c("United States","Alaska","District of Columbia"), Crime$state)
out
clr <- rep(1,dim(Crime)[1])
clr
clr[out] <- 2
out <- match(c("United States","Alaska","District of Columbia"), Crime$state)
clr <- rep(1,dim(Crime)[1])  #1을 Crime의 변수만큼 1을 만들어라.
clr[out] <- 2                #미국, 알래스카, DC에 해당하는 인덱스에만 2를 넣어라.
paris(crime[,-1], col=clr, pch=clr) #2의 값만 빨강으로 출력
library(psych)
paris(crime[,-1], col=clr, pch=clr) #2의 값만 빨강으로 출력
library(MVA)
paris(crime[,-1], col=clr, pch=clr) #2의 값만 빨강으로 출력
install.packages("MVA")
install.packages("MVA")
paris(crime[,-1], col=clr, pch=clr) #2의 값만 빨강으로 출력
install.packages("psych")
install.packages("psych")
library(psych)
Crime <- read.csv("Crime.csv")
pairs.panels(Crime) #단변량분포
corr.test(Crime)  #상관계수, P-value 확인 가능
plot(murder~burglary, Crime) #산점도
identify(Crime$murder, Crime$burglary, labels=Crime$state)
out <- match(c("United States","Alaska","District of Columbia"), Crime$state)
clr <- rep(1,dim(Crime)[1])  #1을 Crime의 변수만큼 1을 만들어라.
clr[out] <- 2                #미국, 알래스카, DC에 해당하는 인덱스에만 2를 넣어라.
paris(crime[,-1], col=clr, pch=clr) #2의 값만 빨강으로 출력
paris(crime[,-1], col=clr, pch=clr) #2의 값만 빨강으로 출력
paris(crime[,-1], col=clr, pch=clr) #2의 값만 빨강으로 출력
pairs(crime[,-1], col=clr, pch=clr) #2의 값만 빨강으로 출력
pairs(crime[,-1], col=clr, pch=clr) #2의 값만 빨강으로 출력
Crime <- read.csv("Crime.csv")
plot(murder~burglary, Crime) #산점도
install.packages("psych")
library(psych)
pairs.panels(Crime)   #단변량 분포, 상관계수
corr.test(Crime[,-1]) #상관계수
identify(Crime$murder, Crime$burglary, labels=Crime$state)
plot(murder~burglary, Crime) #산점도
identify(Crime$murder, Crime$burglary, labels=Crime$state)
out <- match(c("United States","Alaska","District of Columbia"), Crime$state)
clr <- rep(1,dim(Crime)[1])  #1을 Crime의 변수만큼 1을 만들어라.
clr[out] <- 2                #미국, 알래스카, DC에 해당하는 인덱스에만 2를 넣어라.
plot(murder~burglary, Crime[-out,])
plot(murder~burglary, Crime) #산점도
windows()
plot(murder~burglary, Crime[-out,])
corr.test(Crime[-out,])
corr.test((Crime[-out,])[,-1])
corr.test(Crime[,-1]) #상관계수
pairs(crime[,-1], col=clr, pch=clr) #2의 값만 빨강으로 출력
install.packages("psych")
install.packages("psych")
pairs(crime[,-1], col=clr, pch=clr) #2의 값만 빨강으로 출력
plot(murder~burglary, Crime) #산점도
Crime <- read.csv("Crime.csv")
install.packages("psych")
library(psych)
out <- match(c("United States","Alaska","District of Columbia"), Crime$state)
clr <- rep(1,dim(Crime)[1])  #1을 Crime의 변수만큼 1을 만들어라.
clr[out] <- 2                #미국, 알래스카, DC에 해당하는 인덱스에만 2를 넣어라.
windows()
plot(murder~burglary, Crime[-out,])
corr.test((Crime[-out,])[,-1])  #상관계수 "0.62"
pairs(crime[,-1], col=clr, pch=clr) #2의 값만 빨강으로 출력
pairs(Crime[,-1], col=clr, pch=clr) #2의 값만 빨강으로 출력
pairs.panels(Crime) #단변량분포
corr.test(Crime)  #상관계수, P-value 확인 가능
with(Crime, symbols(Crime$murder, Crime$burglary, circles = population, inches = 0.5))
with(Crime, symbols(Crime$murder, Crime$burglary, circles =sqrt(population), inches = 0.5))
with(Crime, symbols(Crime$murder, Crime$burglary, circles =sqrt(population), inches = 0.5))
?heatmap
heatmap(Crime, Rowv=NA, Colv=NA, scale="column", margins=c(5,10), col=brewer.pal(9,"Blues"))
str(Crime)
heatmap(Crime[,-1], Rowv=NA, Colv=NA, scale="column", margins=c(5,10), col=brewer.pal(9,"Blues"))
head(Crime)
Crime[,-1]
?heatmap
heatmap(Crime[,-1], Rowv=NA, Colv=NA, scale="column", margins=c(5,10), col=brewer.pal(9,"Blues"))
Crime[,-1]
str(Crime[,-1])
Crime2 <- Crime[,-1]
Crime2
str(Crime2)
Crime3 <- Crime2[,-8]
heatmap(Crime3, Rowv=NA, Colv=NA, scale="column", margins=c(5,10), col=brewer.pal(9,"Blues"))
?heatmap
str(Crime3)
matrix(Crime3)
matrix(Crime3)
heatmap(matrix(Crime3), Rowv=NA, Colv=NA, scale="column", margins=c(5,10), col=brewer.pal(9,"Blues"))
str(Crime3)
heatmap(matrix(Crime3), Rowv=NA, Colv=NA, scale="column", margins=c(5,5), col=brewer.pal(9,"Blues"))
heatmap(matrix(Crime3), Rowv=NA, Colv=NA, scale="column", margins=c(52,7), col=brewer.pal(9,"Blues"))
heatmap(matrix(Crime3), Rowv=NA, Colv=NA, scale="column", margins=c(7,52), col=brewer.pal(9,"Blues"))
heatmap(matrix(Crime3), Rowv=NA, Colv=NA, scale="column", margins=c(5,10), col=brewer.pal(9,"Blues"))
stars(Crime2, cex=0.7, key.loc = c(15,2))
stars(Crime, cex=0.7, key.loc = c(15,2))
stars(Crime, cex=0.7, key.loc=c(15,2), draw.segments = TRUE)
identify(Crime$murder, Crime$burglary, labels=Crime$state)
